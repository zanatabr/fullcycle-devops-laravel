steps:

- id: "Execução do docker-compose"
  name: 'gcr.io/$PROJECT_ID/docker-compose:1.25.5'
  args: ['-f','docker-compose.cloudbuild.yaml','up','-d']

- id: "Execução do docker container ls"
  name: 'gcr.io/cloud-builders/docker'
  args: ['container','ls']

- id: "Execução do composer"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec','-t','app','composer', 'install']

- id: "Copia do .env"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec','-t','app','cp', '.env.example','.env']

- id: "Execução do key:generate"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec','-t','app','php', '/var/www/artisan','key:generate']

- id: "Execução dos migrations"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec','-t','app','php', '/var/www/artisan','migrate']

- id: "Execução dos testes unitários - phpunit"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec','-t','app','php', '/var/www/vendor/bin/phpunit','-c','/var/www/phpunit.xml']

- id: "Build da imagem a partir do Dockerfile.prod"
  name: 'gcr.io/cloud-builders/docker'
  args: ['build','-t','gcr.io/$PROJECT_ID/app-laravel:$SHORT_SHA', '-f', 'Dockerfile.prod', '.']

- id: "Push da imagem"
  name: 'gcr.io/cloud-builders/docker'
  args: ['push','gcr.io/$PROJECT_ID/app-laravel:$SHORT_SHA']

- id: "Ajuste do arquivo de Deployment do K8s"
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: '/bin/sh'
  args: 
    - '-c'
    - |
      sed 's#img-app-deployment#gcr.io/$PROJECT_ID/app-laravel:$SHORT_SHA#g' .k8s/app/app.yaml > .k8s/app/app-new.yaml;
      cat .k8s/app/app-new.yaml;
