apiVersion: v1
kind: ConfigMap
metadata:
  name: app-conf

data:
  env: |
    APP_NAME=docker-laravel
    APP_ENV=local
    APP_KEY=base64:MpG5uaeGmcnLXQpfLwCa4w6aYNc3AEM0Zq0Yx9h9rT8=
    APP_DEBUG=true
    APP_URL=http://localhost
    LOG_CHANNEL=stack
    DB_CONNECTION=mysql
    DB_HOST=mysql-service
    DB_PORT=3306
    DB_DATABASE=laravel
    DB_USERNAME=root

    BROADCAST_DRIVER=log
    CACHE_DRIVER=file
    QUEUE_CONNECTION=sync
    SESSION_DRIVER=redis
    SESSION_LIFETIME=120

    REDIS_HOST=redis-service
    REDIS_PASSWORD=null
    REDIS_PORT=6379

    MAIL_MAILER=smtp
    MAIL_HOST=smtp.mailtrap.io
    MAIL_PORT=2525
    MAIL_USERNAME=null
    MAIL_PASSWORD=null
    MAIL_ENCRYPTION=null

    AWS_ACCESS_KEY_ID=
    AWS_SECRET_ACCESS_KEY=
    AWS_DEFAULT_REGION=us-east-1
    AWS_BUCKET=

    PUSHER_APP_ID=
    PUSHER_APP_KEY=
    PUSHER_APP_SECRET=
    PUSHER_APP_CLUSTER=

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:

      - name: app
        # a imagem vai variar de acordo com o deploy
        image: img-app-deployment

        ports: 
        - name: http
          containerPort: 80

        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        
        envFrom:
        - configMapRef:
            name: app-conf

        volumeMounts:
        - name: app-conf
          mountPath: /var/www/.env
          subPath: .env # substitui ou cria o .env

      volumes:
      - name: app-conf
        configMap:
          name: app-conf
          items:
            - key: env
              path: .env

---

apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 9000
    nodePort: 30080
  selector: 
    app: app
