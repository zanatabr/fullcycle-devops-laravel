version: '3'

services:
    
    app:
        build: .
        container_name: app
        # entrypoint: dockerize -template ./.docker/app/.env.tmpl:.env -wait tcp://db:3306 -timeout 40s -wait-retry-interval 3s ./.docker/app/entrypoint.sh
        # environment:
        #   - DB_HOST=db
        #   - DB_DATABASE=laravel
        #   - DB_USERNAME=root
        #   - DB_PASSWORD=root
        volumes:
          - .:/var/www
        networks:
          - app-network
        depends_on:
          - db
          - redis

    nginx:
        build: .docker/nginx
        container_name: nginx
        # entrypoint: dockerize -template /etc/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/nginx.conf -wait tcp://app:9000 -timeout 40s -wait-retry-interval 5s nginx
        # command: -g "daemon off;" -c /etc/nginx/nginx.conf
        environment:
          - APP_HOST=app
          - APP_PORT=9000
        restart: always
        tty: true
        ports:
          - "8000:80"
        volumes:
          - .:/var/www
        networks:
          - app-network
        depends_on:
          - app

    db:
        image: mysql:5.7
        # Este comando Ã© importante para que o mysql execute adequadamente
        command: --innodb-use-native-aio=0
        container_name: db
        restart: always
        tty: true
        ports:
          - "3306:3306"
        volumes:
          - ./.docker/dbdata:/var/lib/mysql
        environment:
          - MYSQL_DATABASE=laravel
          - MYSQL_ROOT_PASSWORD=root
          - MYSQL_USER=root
        networks:
          - app-network

    redis:
        image: redis:alpine
        container_name: redis
        expose:
          - 6379
        networks:
          - app-network

networks:
    app-network:
        driver: bridge
